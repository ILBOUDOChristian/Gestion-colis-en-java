/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestioncolis;


import classe.exportercolis;
import classe.toutcolis;

import java.awt.Desktop;

import java.io.File;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ILBOUDO Christian
 */

public class formlist extends javax.swing.JPanel {

    public formlist() {
        initComponents();
        ButtonGroup radio=new ButtonGroup();
        radio.add(jrtout);
        radio.add(jrRetrait);
        radio.add( jrtransfert);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jrtransfert = new javax.swing.JRadioButton();
        jrtout = new javax.swing.JRadioButton();
        jrRetrait = new javax.swing.JRadioButton();
        dpanetab = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        btnmodifier = new javax.swing.JButton();
        btnexporter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabtout = new javax.swing.JTable();
        txtrecherche = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(230, 231, 232));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTE DES COLIS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 18))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1326, 531));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        jLabel1.setText("AFFICHAGE");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        jLabel2.setText("OPTION D'AFFICHAGE");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jrtransfert.setText("TRANSFERT");
        jrtransfert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrtransfert.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrtransfertItemStateChanged(evt);
            }
        });
        jrtransfert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrtransfertActionPerformed(evt);
            }
        });

        jrtout.setText("TOUT");
        jrtout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrtout.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrtoutItemStateChanged(evt);
            }
        });
        jrtout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrtoutActionPerformed(evt);
            }
        });

        jrRetrait.setText("RETRAIT");
        jrRetrait.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrRetrait.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrRetraitItemStateChanged(evt);
            }
        });
        jrRetrait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrRetraitActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(230, 231, 232));

        btnmodifier.setBackground(new java.awt.Color(255, 51, 51));
        btnmodifier.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        btnmodifier.setForeground(new java.awt.Color(255, 255, 255));
        btnmodifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modifier_32.png"))); // NOI18N
        btnmodifier.setText("MODIFIER");
        btnmodifier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnmodifier.setEnabled(false);
        btnmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifierActionPerformed(evt);
            }
        });

        btnexporter.setBackground(new java.awt.Color(51, 51, 255));
        btnexporter.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        btnexporter.setForeground(new java.awt.Color(255, 255, 255));
        btnexporter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel_32.png"))); // NOI18N
        btnexporter.setText("EXPORTER");
        btnexporter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnexporter.setEnabled(false);
        btnexporter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexporterActionPerformed(evt);
            }
        });

        tabtout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Id", "NÂ°paquets", "Type", "Poids", "Prix", "Expediteur", "Cni", "Tel exp", "Ville D", "Ville  A", "Recepteur", "Tel recep"
            }
        ));
        tabtout.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabtout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabtoutMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabtout);

        txtrecherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrechercheKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(341, 341, 341)
                .addComponent(btnmodifier)
                .addGap(18, 18, 18)
                .addComponent(btnexporter)
                .addContainerGap(413, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmodifier, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnexporter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        dpanetab.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout dpanetabLayout = new javax.swing.GroupLayout(dpanetab);
        dpanetab.setLayout(dpanetabLayout);
        dpanetabLayout.setHorizontalGroup(
            dpanetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        dpanetabLayout.setVerticalGroup(
            dpanetabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dpanetabLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jrtout)
                        .addGap(10, 10, 10)
                        .addComponent(jrtransfert)
                        .addGap(18, 18, 18)
                        .addComponent(jrRetrait)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(dpanetab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpanetab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrtransfert)
                            .addComponent(jrRetrait)
                            .addComponent(jrtout))))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1366, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnexporterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexporterActionPerformed
        try {
            // RÃ©cupÃ©rer le modÃ¨le de tableau du composant
            DefaultTableModel tab = (DefaultTableModel) tabtout.getModel();
            // Appeler la mÃ©thode 'exporter' de la classe 'exporterclient' pour crÃ©er le fichier Excel
            exportercolis.exporter(tab);
            //            ouverture le fichier excel
            Desktop dk=Desktop.getDesktop();
            dk.open(new File ("C:/Users/Public/liste.xls"));
        } catch (Exception ex) {
            Logger.getLogger(exportercolis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnexporterActionPerformed

    private void btnmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifierActionPerformed

        DefaultTableModel t = (DefaultTableModel) tabtout.getModel();
        int selectedRowIndex = tabtout.getSelectedRow();

        if (selectedRowIndex >= 0) {
            String[] columnNames = {"Date", "Identifiant", "Nombre de Paquets", "Type", "Poids", "Prix", "ExpÃ©diteur", "CNI", "Ville de DÃ©part", "TÃ©lÃ©phone", "RÃ©cepteur", "Ville d'ArrivÃ©e", "TÃ©lÃ©phone RÃ©cepteur"};
            String selectedColumn = (String) JOptionPane.showInputDialog(null, "Veuillez choisir la colonne Ã  modifier",
                "Choisir Colonne", JOptionPane.QUESTION_MESSAGE, null, columnNames, columnNames[0]);

            if (selectedColumn != null) {
                int selectedColumnIndex = -1;
                for (int i = 0; i < columnNames.length; i++) {
                    if (columnNames[i].equals(selectedColumn)) {
                        selectedColumnIndex = i;
                        break;
                    }
                }

                if (selectedColumnIndex != -1) {
                    String currentValue = t.getValueAt(selectedRowIndex, selectedColumnIndex).toString();
                    String newValue = JOptionPane.showInputDialog(null, "Nouvelle valeur pour " + selectedColumn, "ModifiÃ©", JOptionPane.INFORMATION_MESSAGE, null, null, currentValue).toString();

                    if (newValue != null && !newValue.trim().isEmpty()) {
                        t.setValueAt(newValue, selectedRowIndex, selectedColumnIndex);

                        // RÃ©cupÃ©ration des valeurs mises Ã  jour
                        String date = t.getValueAt(selectedRowIndex, 0).toString();
                        String identifiant = t.getValueAt(selectedRowIndex, 1).toString();
                        String nombrePaquets = t.getValueAt(selectedRowIndex, 2).toString();
                        String type = t.getValueAt(selectedRowIndex, 3).toString();
                        String poids = t.getValueAt(selectedRowIndex, 4).toString();
                        String prix = t.getValueAt(selectedRowIndex, 5).toString();
                        String expediteur = t.getValueAt(selectedRowIndex, 6).toString();
                        String cni = t.getValueAt(selectedRowIndex, 7).toString();
                        String villeDepart = t.getValueAt(selectedRowIndex, 8).toString();
                        String tel = t.getValueAt(selectedRowIndex, 9).toString();
                        String recepteur = t.getValueAt(selectedRowIndex, 10).toString();
                        String villeArrive = t.getValueAt(selectedRowIndex, 11).toString();
                        String telRecepteur = t.getValueAt(selectedRowIndex, 12).toString();

                        // Mise Ã  jour de la base de donnÃ©es
                        try {
                            classe.toutcolis.modifier(date, identifiant, nombrePaquets, type, poids, prix, expediteur, cni, villeDepart, tel, recepteur, villeArrive, telRecepteur);
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(toutcolis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La valeur saisie est invalide.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Colonne sÃ©lectionnÃ©e invalide.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez sÃ©lectionner une ligne Ã  modifier.");
        }
    }//GEN-LAST:event_btnmodifierActionPerformed

    private void txtrechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrechercheKeyReleased
        DefaultTableModel t = (DefaultTableModel) tabtout.getModel();
        t.setRowCount(0);
        String nom=txtrecherche.getText();
        try {
            classe.toutcolis.rechercher(t, nom);
        } catch (SQLException ex) {
            Logger.getLogger(formlist.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_txtrechercheKeyReleased

    private void jrRetraitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrRetraitActionPerformed
        dpanetab.removeAll();
        dpanetab.repaint();
        formtabretrait fe=new formtabretrait();
        fe.setSize(dpanetab.getWidth(),dpanetab.getHeight());
        fe.setVisible(true);
        dpanetab.add(fe);
        fe.setLocation(0,0);

    }//GEN-LAST:event_jrRetraitActionPerformed

    private void jrRetraitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrRetraitItemStateChanged

    }//GEN-LAST:event_jrRetraitItemStateChanged

    private void jrtoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrtoutActionPerformed

        dpanetab.removeAll();
        dpanetab.repaint();
        formtabtout fe=new formtabtout();
        fe.setSize(dpanetab.getWidth(),dpanetab.getHeight());
        fe.setVisible(true);
        dpanetab.add(fe);
        fe.setLocation(0,0);

    }//GEN-LAST:event_jrtoutActionPerformed

    private void jrtoutItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrtoutItemStateChanged

    }//GEN-LAST:event_jrtoutItemStateChanged

    private void jrtransfertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrtransfertActionPerformed
        dpanetab.removeAll();
        dpanetab.repaint();
        formtabtrans fe=new formtabtrans();
        fe.setSize(dpanetab.getWidth(),dpanetab.getHeight());
        fe.setVisible(true);
        dpanetab.add(fe);
        fe.setLocation(0,0);

    }//GEN-LAST:event_jrtransfertActionPerformed

    private void jrtransfertItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrtransfertItemStateChanged

    }//GEN-LAST:event_jrtransfertItemStateChanged

    private void tabtoutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabtoutMouseReleased
        DefaultTableModel t = (DefaultTableModel) tabtout.getModel();
        int selectedRowIndex = tabtout.getSelectedRow();

        if (selectedRowIndex >= 0) {
            String[] columnNames = {"Date", "Identifiant", "Nombre de Paquets", "Type", "Poids", "Prix", "ExpÃ©diteur", "CNI", "Ville de DÃ©part", "TÃ©lÃ©phone", "RÃ©cepteur", "Ville d'ArrivÃ©e", "TÃ©lÃ©phone RÃ©cepteur"};
            String selectedColumn = (String) JOptionPane.showInputDialog(null, "Veuillez choisir la colonne Ã  modifier",
                "Choisir Colonne", JOptionPane.QUESTION_MESSAGE, null, columnNames, columnNames[0]);

            if (selectedColumn != null) {
                int selectedColumnIndex = -1;
                for (int i = 0; i < columnNames.length; i++) {
                    if (columnNames[i].equals(selectedColumn)) {
                        selectedColumnIndex = i;
                        break;
                    }
                }

                if (selectedColumnIndex != -1) {
                    String currentValue = t.getValueAt(selectedRowIndex, selectedColumnIndex).toString();
                    String newValue = JOptionPane.showInputDialog(null, "Nouvelle valeur pour " + selectedColumn, "ModifiÃ©", JOptionPane.INFORMATION_MESSAGE, null, null, currentValue).toString();

                    if (newValue != null && !newValue.trim().isEmpty()) {
                        t.setValueAt(newValue, selectedRowIndex, selectedColumnIndex);

                        // RÃ©cupÃ©ration des valeurs mises Ã  jour
                        String date = t.getValueAt(selectedRowIndex, 0).toString();
                        String identifiant = t.getValueAt(selectedRowIndex, 1).toString();
                        String nombrePaquets = t.getValueAt(selectedRowIndex, 2).toString();
                        String type = t.getValueAt(selectedRowIndex, 3).toString();
                        String poids = t.getValueAt(selectedRowIndex, 4).toString();
                        String prix = t.getValueAt(selectedRowIndex, 5).toString();
                        String expediteur = t.getValueAt(selectedRowIndex, 6).toString();
                        String cni = t.getValueAt(selectedRowIndex, 7).toString();
                        String villeDepart = t.getValueAt(selectedRowIndex, 8).toString();
                        String tel = t.getValueAt(selectedRowIndex, 9).toString();
                        String recepteur = t.getValueAt(selectedRowIndex, 10).toString();
                        String villeArrive = t.getValueAt(selectedRowIndex, 11).toString();
                        String telRecepteur = t.getValueAt(selectedRowIndex, 12).toString();

                        // Mise Ã  jour de la base de donnÃ©es
                        try {
                            classe.toutcolis.modifier(date, identifiant, nombrePaquets, type, poids, prix, expediteur, cni, villeDepart, tel, recepteur, villeArrive, telRecepteur);
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(toutcolis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La valeur saisie est invalide.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Colonne sÃ©lectionnÃ©e invalide.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez sÃ©lectionner une ligne Ã  modifier.");
        }
    }//GEN-LAST:event_tabtoutMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnexporter;
    private javax.swing.JButton btnmodifier;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDesktopPane dpanetab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrRetrait;
    private javax.swing.JRadioButton jrtout;
    private javax.swing.JRadioButton jrtransfert;
    public javax.swing.JTable tabtout;
    private javax.swing.JTextField txtrecherche;
    // End of variables declaration//GEN-END:variables

    
   
}
